macro(add_cet_studio_static_plugin pluginName pluginPath buildPath)
  set(BUILD_STATIC_CET_STUDIO_PLUGIN ON)
  add_subdirectory(${pluginPath} ${buildPath})
  if (POLICY CMP0079)
    cmake_policy(SET CMP0079 NEW)
  endif()
  target_link_libraries(cet_studio PRIVATE ${pluginName})
  set(BUILD_STATIC_CET_STUDIO_PLUGIN OFF)
  message("ADDED_STATIC_CET_STUDIO_PLUGIN: " ${pluginName})
endmacro()

macro(add_cet_studio_dynamic_plugin pluginName pluginPath buildPath)
  set(BUILD_STATIC_CET_STUDIO_PLUGIN OFF)
  add_subdirectory(${pluginPath} ${buildPath})
  message("ADDED_DYNAMIC_CET_STUDIO_PLUGIN: " ${pluginName})
endmacro()

macro(clear_cet_studio_static_plugins_header)
  file(WRITE ${CMAKE_BINARY_DIR}/cet_studio_static_plugins/cet_studio_static_plugins.h "")
endmacro()

macro(register_cet_studio_static_plugin_headers headers)
  set(_headers ${headers} ${ARGN})
  
  foreach(f ${_headers})
    file(RELATIVE_PATH fr ${CMAKE_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/${f})
    get_filename_component(HEADER_FILE_NAME ${fr} NAME)
    get_filename_component(ABS_FILE_PATH ${f} ABSOLUTE)
    file(APPEND ${CMAKE_BINARY_DIR}/cet_studio_static_plugins/cet_studio_static_plugins.h "#include \"${ABS_FILE_PATH}\"\n")
  endforeach()
endmacro()
